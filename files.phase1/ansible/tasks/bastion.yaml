---

- name: Update Server
  yum:
    name: '*'
    state: latest
    update_cache: yes
  register: updated


# If updated, reboot server and wait for SSH readiness.
- block:
    - name: Reboot Server
      command: shutdown +1 -r

    - name: Wait for reboot cycle
      wait_for:
        delay: 70
        host: "{{ inventory_hostname }}"
        port: 22
        state: started
      delegate_to: localhost
  when: updated.changed == true


- name: Install needed packages
  yum:
    name: ['bash-completion', 'vim', 'haproxy', 'ca-certificates', 'skopeo', 'wget', 'bind']
    state: installed


# named: ips and names.
# /etc/named.conf

- name: Configure /etc/named.conf
  ansible.builtin.template:
    src: files/named/named.conf.j2
    dest: /etc/named.conf
    owner: root
    group: named
    mode: '0740'
    backup: no
    validate: /usr/sbin/named-checkconf %s

- name: Configure /var/named/dynamic/{{ cluster_domain }}.db
  ansible.builtin.template:
    src: files/named/zone.db.j2
    dest: /var/named/dynamic/{{ cluster_domain }}.db
    owner: root
    group: named
    mode: '0740'
    backup: no
    validate: /usr/sbin/named-checkzone "{{ cluster_domain }}" %s

- name: Configure /var/named/dynamic/{{ network_reverse }}.in-addr.arpa.db
  ansible.builtin.template:
    src: files/named/reverse.db.j2
    dest: /var/named/dynamic/{{ network_reverse }}.in-addr.arpa.db
    owner: root
    group: named
    mode: '0740'
    backup: no
    validate: /usr/sbin/named-checkzone "{{ network_reverse }}.in-addr.arpa" %s

- name: restart and enable named.service
  ansible.builtin.systemd:
    name: named.service
    state: restarted
    enabled: yes


# dhcpd: ips, names and mac addresses.
# /etc/dhcp/dhcpd.conf

# httpd: port 81, ignition and pxe files.
# ?

# tftp: role per mac and default.
# /var/lib/tftpboot/pxelinux.cfg/default

# haproxy ports 80, 443: names.
# /etc/haproxy/haproxy.cfg

# ntp server!!!

# nfs?



- name: Configure Firewalld
  firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
  with_items:
    - dns
    - http
    - https
    - ntp
